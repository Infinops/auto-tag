{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Description" : "Auto Tag (Open Source by Infinops)",
  "Parameters" : {

    "CodeS3Bucket" : {
      "Description" : "The name of the code bucket in S3",
      "Type" : "String",
      "Default" : "infinops-autotag-releases-ap-northeast-1"
    },

    "CodeS3Path" : {
      "Description" : "The path of the autotag code zip file in the code bucket in S3",
      "Type" : "String",
      "Default" : "autotag-0.1.1.zip"
    },
    "CodeS3PathInitialTagging" : {
      "Description" : "The path of the initial tagging code zip file in the code bucket in S3",
      "Type" : "String",
      "Default" : "autotag-initial-0.1.1.zip"
    },
    "CodeS3PathProjectTagging" : {
      "Description" : "The path of the project tagging code zip file in the code bucket in S3",
      "Type" : "String",
      "Default" : "autotag-project-0.1.1.zip"
    },
    "AutoTagDebugLogging": {
      "Description": "Enable/Disable Debug Logging for the Lambda Function for all processed CloudTrail events.",
      "Type": "String",
      "AllowedValues": [
        "Enabled",
        "Disabled"
      ],
      "Default": "Disabled"
    },
    "AutoTagDebugLoggingOnFailure": {
      "Description": "Enable/Disable Debug Logging when the Lambda Function has a failure.",
      "Type": "String",
      "AllowedValues": [
        "Enabled",
        "Disabled"
      ],
      "Default": "Enabled"
    },
    "AutoTagTagsCreateTime": {
      "Description": "Enable/Disable the \"CreateTime\" tagging for all resources.",
      "Type": "String",
      "AllowedValues": [
        "Enabled",
        "Disabled"
      ],
      "Default": "Enabled"
    },
    "AutoTagTagsInvokedBy": {
      "Description": "Enable/Disable the \"InvokedBy\" tagging for all resources.",
      "Type": "String",
      "AllowedValues": [
        "Enabled",
        "Disabled"
      ],
      "Default": "Enabled"
    }
  },

  "Resources": {

    "AutoTagLambdaFunction" : {
      "Type" : "AWS::Lambda::Function",
      "Properties" : {
        "Code" : {
          "S3Bucket": { "Ref" : "CodeS3Bucket" },
          "S3Key": { "Ref" : "CodeS3Path" }
        },
        "Description" : "Auto Tag (Open Source by Infinops)",
        "FunctionName" : {
          "Fn::Sub": "${AWS::StackName}"
        },
        "Handler" : "autotag_event.handler",
        "Role" : { "Fn::GetAtt" : [ "AutoTagExecutionRole", "Arn" ] },
        "Runtime" : "nodejs18.x",
        "Timeout" : 120,
        "Environment": {
          "Variables": {
            "DEBUG_LOGGING_ON_FAILURE": {
              "Ref": "AutoTagDebugLoggingOnFailure"
            },
            "DEBUG_LOGGING": {
              "Ref": "AutoTagDebugLogging"
            },
            "CREATE_TIME": {
              "Ref": "AutoTagTagsCreateTime"
            },
            "INVOKED_BY": {
              "Ref": "AutoTagTagsInvokedBy"
            },
            "ROLE_NAME": {
              "Ref": "AutoTagMasterRole"
            }
          }
        }
      }
    },

    "AutoTagExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": {
          "Fn::Sub": "${AWS::StackName}Lambda"
        },
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/infinops/autotag/execution/"
      }
    },

    "AutoTagAdditionalExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": {
          "Fn::Sub": "${AWS::StackName}AdditionalLambda"
        },
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/infinops/autotag-add/execution/"
      }
    },


    "AutoTagExecutionPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": {
          "Fn::Sub": "${AWS::StackName}ExecutionPolicy"
        },
        "Roles": [
          {
            "Ref": "AutoTagExecutionRole"
          }
        ],
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Resource": "arn:aws:logs:*:*:*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "sts:*"
              ],
              "Resource": [
                {
                  "Fn::Sub": "arn:aws:iam::*:role/infinops/autotag/master/${AWS::StackName}"
                }
              ]
            }
          ]
        }
      }
    },
    "AutoTagAdditionalExecutionPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": {
          "Fn::Sub": "${AWS::StackName}AdditionalExecutionPolicy"
        },
        "Roles": [
          {
            "Ref": "AutoTagAdditionalExecutionRole"
          }
        ],
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement":  [
            {
                "Sid": "ResourceTagging",
                "Effect": "Allow",
                "Action": [
                    "tag:GetResources",
                    "tag:GetTagKeys",
                    "tag:GetTagValues",
                    "tag:GetComplianceSummary",
                    "tag:TagResources",
                    "opsworks:TagResource"
                ],
                "Resource": [
                    "*"
                ]
            },
            {
                "Sid": "GetRegionList",
                "Effect": "Allow",
                "Action": [
                    "ec2:DescribeRegions"
                ],
                "Resource": [
                    "*"
                ]
            },
            {
                "Sid": "Tagging",
                "Effect": "Allow",
                "Action": [
                    "mq:CreateTags",
                    "appstream:TagResource",
                    "cloudwatch:TagResource",
                    "events:TagResource",
                    "logs:TagResource",
                    "s3:PutBucketTagging",
                    "ec2:CreateTags",
                    "dynamodb:TagResource",
                    "elasticmapreduce:AddTags",
                    "rds:AddTagsToResource",
                    "braket:TagResource",
                    "acm:AddTagsToCertificate",
                    "cloud9:TagResource",
                    "cloudformation:TagResource",
                    "cloudformation:DescribeStacks",
                    "cloudtrail:AddTags",
                    "codeartifact:TagResource",
                    "codecommit:TagResource",
                    "codeguru-reviewer:TagResource",
                    "codepipeline:TagResource",
                    "cognito-identity:TagResource",
                    "comprehend:TagResource",
                    "config:TagResource",
                    "dms:AddTagsToResource",
                    "databrew:TagResource",
                    "dataexchange:TagResource",
                    "datapipeline:AddTags",
                    "elasticfilesystem:TagResource",
                    "elasticfilesystem:CreateTags",
                    "eks:TagResource",
                    "emr-containers:TagResource",
                    "elasticache:AddTagsToResource",
                    "elasticbeanstalk:AddTags",
                    "elasticbeanstalk:UpdateTagsForResource",
                    "docdb-elastic:TagResource",
                    "elastic-inference:TagResource",
                    "elasticloadbalancing:AddTags",
                    "es:AddTags",
                    "osis:TagResource",
                    "aoss:TagResource",
                    "fsx:TagResource",
                    "forecast:TagResource",
                    "pipes:TagResource",
                    "frauddetector:TagResource",
                    "glacier:AddTagsToVault",
                    "glue:TagResource",
                    "greengrass:TagResource",
                    "iot:TagResource",
                    "iotanalytics:TagResource",
                    "iotevents:TagResource",
                    "kms:TagResource",
                    "kinesis:AddTagsToStream",
                    "kinesisanalytics:TagResource",
                    "macie2:TagResource",
                    "lambda:TagResource",
                    "organizations:TagResource",
                    "qldb:TagResource",
                    "redshift:CreateTags",
                    "redshift-serverless:TagResource",
                    "robomaker:TagResource",
                    "resource-groups:Tag",
                    "ram:TagResource",
                    "ses:TagResource",
                    "sns:TagResource",
                    "route53resolver:TagResource",
                    "sqs:TagQueue",
                    "sagemaker:AddTags",
                    "secretsmanager:TagResource",
                    "states:TagResource",
                    "storagegateway:AddTagsToResource",
                    "workspaces:CreateTags",
                    "ssm:AddTagsToResource"
                ],
                "Resource": [
                    "*"
                ]
            }
          ]
        }
      }
    },
    "AutoTagDynamoDbProjectList": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": {
          "Fn::Sub": "${AWS::StackName}DynamoDbProjectList"
        },
        "Roles": [
          {
            "Ref": "AutoTagAdditionalExecutionRole"
          }
        ],
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement":  [
            {
                "Sid": "DynamoDB",
                "Effect": "Allow",
                "Action": [
                  "dynamodb:BatchGetItem",
                  "dynamodb:GetItem",
                  "dynamodb:Scan"
                ],
                "Resource": [
                  {
                    "Fn::Sub": "arn:aws:dynamodb:*:${AWS::AccountId}:table/InfinopsProjectNameTaggingTable"
                  }
                ]
            }
          ]
        }
      }
    },
    "AutoTagMasterRole" : {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "AWS" : { "Fn::GetAtt" : [ "AutoTagExecutionRole", "Arn" ] }
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/infinops/autotag/master/"
      }
    },

    "AutoTagMasterPolicy" : {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "AutoTagMasterPolicy",
        "Roles": [ { "Ref": "AutoTagMasterRole" } ],
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "autoscaling:CreateOrUpdateTags",
                "autoscaling:DescribeAutoScalingGroups",
                "autoscaling:DescribeAutoScalingInstances",
                "autoscaling:DescribeTags",
                "cloudwatch:TagResource",
                "datapipeline:AddTags",
                "dynamodb:ListTagsOfResource",
                "dynamodb:TagResource",
                "ec2:CreateTags",
                "ec2:DescribeInstances",
                "ec2:DescribeSnapshots",
                "events:TagResource",
                "elasticloadbalancing:AddTags",
                "elasticmapreduce:AddTags",
                "iam:TagRole",
                "iam:TagUser",
                "lambda:TagResource",
                "logs:TagLogGroup",
                "rds:AddTagsToResource",
                "opsworks:DescribeInstances",
                "opsworks:DescribeStacks",
                "opsworks:ListTags",
                "opsworks:TagResource",
                "s3:GetBucketTagging",
                "s3:PutBucketTagging"
              ],
              "Resource": [ "*" ]
            }
          ]
        }
      }
    },

    "TriggerLambdaPermission": {
      "Type" : "AWS::Lambda::Permission",
      "DependsOn" : "AutoTagLambdaFunction",
      "Properties" : {
        "Action" : "lambda:InvokeFunction",
        "FunctionName" : { "Fn::GetAtt" : [ "AutoTagLambdaFunction", "Arn" ] },
        "Principal" : "events.amazonaws.com",
        "SourceArn": { "Fn::GetAtt" : [ "EC2EventRule", "Arn" ] }
      }
    },

    "AutoTagInititialTaggingLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "CodeS3Bucket"
          },
          "S3Key": {
            "Ref": "CodeS3PathInitialTagging"
          }
        },
        "Description": "Infinops function for initial resource tagging (Open Source by Infinops)",
        "FunctionName": {
          "Fn::Sub": "${LambdaName}InitialTagging"
        },
        "Handler": {
          "Fn::Sub": "index.handler"
        },
        "Role": {
          "Fn::GetAtt": [
            "AutoTagAdditionalExecutionRole",
            "Arn"
          ]
        },
        "Runtime": "nodejs20.x",
        "Timeout": 600
      }
    },
    "AutoTagProjectTaggingLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "CodeS3Bucket"
          },
          "S3Key": {
            "Ref": "CodeS3PathProjectTagging"
          }
        },
        "Description": "Infinops function for  resource tagging with project tag based on Name tag(Open Source by Infinops)",
        "FunctionName": {
          "Fn::Sub": "${LambdaName}ProjectTagging"
        },
        "Handler": {
          "Fn::Sub": "index.handler"
        },
        "Role": {
          "Fn::GetAtt": [
            "AutoTagAdditionalExecutionRole",
            "Arn"
          ]
        },
        "Runtime": "nodejs20.x",
        "Timeout": 600
      }
    },
    "EventBridgeRuleEveryHour": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "EventBusName": "default",
        "Name": "infinops-cron-hour-rule",
        "ScheduleExpression": "rate(1 hour)",
        "State": "enabled",
        "Targets": {
          "Id":{
            "Fn::Sub": "${LambdaName}ProjectTagging"
          },
          "":{
            "Fn::Sub": "arn:aws:lambda:*:${AWS::AccountId}:function:${LambdaName}ProjectTagging"
          },
          "Input":"Matched event"
        }
      }
    },
    "InfinopsProjectNameTaggingTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "BillingMode": "PAY_PER_REQUEST",
        "AttributeDefinitions": {
          "AttributeName": "project",
          "AttributeType": "S"
        },
        "KeySchema": [{
          "AttributeName": "project",
          "KeyType": "HASH"
        }]
      }
    },







    "EC2EventRule" : {
      "Type" : "AWS::Events::Rule",
      "Properties" : {
        "Description" : "Auto-tag resources with Lambda from CloudTrail events",
        "EventPattern" : {
          "detail-type" : [
            "AWS API Call via CloudTrail"
          ],
          "detail" : {
            "eventSource" : [
              "autoscaling.amazonaws.com",
              "datapipeline.amazonaws.com",
              "dynamodb.amazonaws.com",
              "ec2.amazonaws.com",
              "events.amazonaws.com",
              "elasticloadbalancing.amazonaws.com",
              "elasticmapreduce.amazonaws.com",
              "iam.amazonaws.com",
              "lambda.amazonaws.com",
              "logs.amazonaws.com",
              "monitoring.amazonaws.com",
              "opsworks.amazonaws.com",
              "rds.amazonaws.com",
              "s3.amazonaws.com"
            ],
            "eventName" : [
              "AllocateAddress",
              "CloneStack",
              "CopyImage",
              "CopySnapshot",
              "CreateAutoScalingGroup",
              "CreateBucket",
              "CreateCustomerGateway",
              "CreateDBInstance",
              "CreateDhcpOptions",
              "CreateFunction20150331",
              "CreateFunction20141111",
              "CreateImage",
              "CreateInternetGateway",
              "CreateLoadBalancer",
              "CreateLogGroup",
              "CreateNatGateway",
              "CreateNetworkAcl",
              "CreateNetworkInterface",
              "CreatePipeline",
              "CreateRole",
              "CreateRouteTable",
              "CreateSecurityGroup",
              "CreateSnapshot",
              "CreateStack",
              "CreateSubnet",
              "CreateTable",
              "CreateUser",
              "CreateVolume",
              "CreateVpc",
              "CreateVpnConnection",
              "CreateVpnGateway",
              "CreateVpcPeeringConnection",
              "ImportSnapshot",
              "PutMetricAlarm",
              "PutRule",
              "RegisterImage",
              "RunInstances",
              "RunJobFlow"
            ]
          }
        },
        "Name" : "AutoTag-CloudTrail-Events",
        "State" : "ENABLED",
        "Targets" : [
          {
            "Arn" : { "Fn::GetAtt" : [ "AutoTagLambdaFunction", "Arn" ] },
            "Id"  : "Main"
          }
        ]
      }
    }
  }
}
